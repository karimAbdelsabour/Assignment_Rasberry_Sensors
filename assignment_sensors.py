# -*- coding: utf-8 -*-
"""Assignment Sensors.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c5TJcFfud2wLYkPp7lAhyK2eyFW2NNDD
"""
# Hello My name is karim
from matplotlib import pyplot as plt
from matplotlib import animation
from gpiozero import DistanceSensor
import numpy as np
import adafruit_dht
import time
import board

dht_device = adafruit_dht.DHT11(board.D2)
sensor = DistanceSensor(echo=14, trigger=15)

fig, ax = plt.subplots()
ax.set_xlim(0, 30)
ax.set_ylim(15, 45)
line_temp, = ax.plot(np.arange(30), np.ones(30, dtype=float) * np.nan, lw=1, c='blue', marker='d', ms=2, label='Temperature (°C)')
line_hum, = ax.plot(np.arange(30), np.ones(30, dtype=float) * np.nan, lw=1, c='green', marker='o', ms=2, label='Humidity (%)')
line_dist, = ax.plot(np.arange(30), np.ones(30, dtype=float) * np.nan, lw=1, c='red', marker='s', ms=2, label='Distance (cm)')
ax.legend()

def init():
    return line_temp, line_hum, line_dist

def animate(i):
    temperature_c = dht_device.temperature
    humidity = dht_device.humidity
    distance = sensor.distance * 100

    old_temp_y = line_temp.get_ydata()
    new_temp_y = np.r_[old_temp_y[1:], temperature_c]
    line_temp.set_ydata(new_temp_y)

    old_hum_y = line_hum.get_ydata()
    new_hum_y = np.r_[old_hum_y[1:], humidity]
    line_hum.set_ydata(new_hum_y)

    old_dist_y = line_dist.get_ydata()
    new_dist_y = np.r_[old_dist_y[1:], distance]
    line_dist.set_ydata(new_dist_y)

    return line_temp, line_hum, line_dist

anim = animation.FuncAnimation(fig, animate, init_func=init, frames=30, interval=1000, blit=False)
anim.save(f"/home/admin/RWP/S3/anim_temp_{int(time.time())}.gif", writer='pillow')
plt.savefig(f"/home/admin/RWP/S3/anim_temp_{int(time.time())}.png")
plt.show()

with open("LogSensorsData.txt", 'w') as LogSensorsData:
    while True:
        distance = sensor.distance * 100
        temperature_c = dht_device.temperature
        humidity = dht_device.humidity
        LogSensorsData.write(f"Distance: {distance} cm - Temperature: {temperature_c}°C - Humidity: {humidity}%\n")
        LogSensorsData.flush()
        time.sleep(1)
